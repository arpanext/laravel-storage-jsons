name: laravel-mongo-http-api

on:
  push:
    branches: [ master ]
  #pull_request:
  #  branches: [ master ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create a temp folder
        run: mkdir -p /tmp/packages/arpanext/laravel-mongo-http-api
      - name: Move the package source
        run: mv -v $(ls -A .) /tmp/packages/arpanext/laravel-mongo-http-api
      - name: Create a laravel project
        run: composer create-project laravel/laravel .
      - name: Require laravel-swagger-schemas-api
        run: composer require arpanext/laravel-swagger-schemas-api
      - name: Vendor publish for laravel-swagger-schemas-api
        run: php artisan vendor:publish --provider=Arpanext\\Swagger\\Schemas\\App\\Providers\\AppServiceProvider --tag="swagger-schemas-api"
      - name: Require laravel-swagger-consoles-ui
        run: composer require arpanext/laravel-swagger-consoles-ui
      - name: Vendor publish for laravel-swagger-schemas-api
        run: php artisan vendor:publish --provider=Arpanext\\Swagger\\Consoles\\App\\Providers\\AppServiceProvider --tag="swagger-consoles-ui"
      - name: Move the package source
        run: mv -v /tmp/packages .
      - name: Register the package into the composer.json
        run: sed -i '/"require"/i \ \ \ \ "repositories":[{ "type":"path","url":"./packages/arpanext/laravel-mongo-http-api","options":{"symlink":true}}],' ./composer.json
      - name: Dumps the autoloader
        run: composer dumpautoload
      - name: Install the package
        run: composer require arpanext/laravel-mongo-http-api
      - name: Copy the .env.example
        run:  cp -rf ./packages/arpanext/laravel-mongo-http-api/src/.env.example ./.env
      - name: Set the application key
        run:  php artisan key:generate
      - name: Create archive
        run: tar -czvf /tmp/project.tar.gz .
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: /tmp/project.tar.gz

  tests:
    needs: [install]
    runs-on: ubuntu-latest
    services:
      mongodb:
          image: mongo:4.2.2
          env:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            #MONGO_INITDB_DATABASE: test
          options: >-
            --health-cmd mongo
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 27017:27017
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: /tmp
      - name: Extract archive
        run: tar -xzvf /tmp/project.tar.gz
      - name: Run tests
        run: XDEBUG_MODE=coverage vendor/bin/phpunit packages/arpanext/laravel-mongo-http-api --configuration=packages/arpanext/laravel-mongo-http-api/phpunit.xml --coverage-text
